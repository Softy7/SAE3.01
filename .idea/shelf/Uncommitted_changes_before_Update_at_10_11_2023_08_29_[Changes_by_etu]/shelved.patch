Index: Model/Player.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\ninclude_once('Member.php');\r\nclass Player extends Member {\r\n    protected $team;\r\n\r\n    /**\r\n     * @param $un \"le pseudo du joueur\r\n     * @param $m \"le mail du joueur\r\n     * @param $n \"le nom du joueur\r\n     * @param $fn \"le prénom du joueur\r\n     * @param $b \"la date de naissance du joueur écrit sous la forme jj/mm/aaaa\r\n     * @param $p \"le mot de passe du joueur\r\n     * @param $t \"l'équipe du joueur\r\n     */\r\n\r\n    function __construct($un, $m, $n, $fn, $b, $p, $t) {\r\n        parent::__construct($un, $m, $n, $fn, $b, $p);\r\n        $this->team = $t;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Model/Player.php b/Model/Player.php
--- a/Model/Player.php	(revision a1f0b300cca960a31fe8f978f499a827493740c2)
+++ b/Model/Player.php	(date 1699349583095)
@@ -17,4 +17,98 @@
         parent::__construct($un, $m, $n, $fn, $b, $p);
         $this->team = $t;
     }
+
+    public function getTeam() {
+        return $this->team;
+    }
+
+    public function setTeam($team) {
+        $bdd = new PDO ("pgsql:host=localhost;dbname=postgres",'postgres','v1c70I83');
+
+        $request = $bdd->prepare("update Guests 
+                                        set Team = :teamName
+                                        where username = :username;");//passe ce joueur dans une équipe
+        $request->bindValue(':teamName',$team->name,PDO::PARAM_STR);
+        $request->bindValue(':username',$this->username,PDO::PARAM_STR);
+        $request->execute();
+        $this->team = $team;
+
+    }
+
+    function getTeammates($bdd) {
+        $request = $bdd->prepare("Select username from Guests where team = :teamname and username != :username");//retire le capitaine de son equipe
+        $request->bindValue(':teamname', $this->team->name, PDO::PARAM_STR);
+        $request->bindValue(':username', $this->username, PDO::PARAM_STR);
+        $request->execute();
+        return $request->fetchAll();
+    }
+
+    /*
+     * cette fonction permet de retirer le joueur de l'équipe
+     * */
+
+    public function unsetTeam() {
+        $bdd = new PDO ("pgsql:host=localhost;dbname=postgres",'postgres','v1c70I83');
+
+        $request = $bdd->prepare("update Guests 
+                                        set Team = null
+                                        where username = :username;");//retire se joueur son equipe
+        $request->bindValue(':username',$this->username,PDO::PARAM_STR);
+        $request->execute();
+        $this->team->removePlayer($this->username);
+        $this->team = null;//annule l'équipe affilié
+    }
+
+    /*
+     * cette fonction permet de passer un joueur membre
+     * */
+
+    //à modifier
+    public function unsetPlayer($bdd){
+        $request = $bdd->prepare("update Guests 
+                                        set isPlayer = false
+                                        where username = :username;");//passe le joueur en tant que membre
+        $request->bindParam(':username',$this->username);
+        $request->execute();
+        if ($this->team != null) {// si le joueur est dans une equipe
+            $this->unsetTeam();
+        }
+        return new Member($this->username, $this->getMail(), $this->getName(), ($this->getFirstname()), $this->getBirthday(), $this->getPassword(), $this->getIsRegistering());
+    }
+
+    public function createTeam($teamName, $playerUsername, $bdd){
+        $requete=$bdd->prepare("INSERT INTO Team VALUES (:teamName,0,0,0)");
+        $requete->bindParam(':teamName',$teamName);
+        $requete->execute();
+
+        $requete0=$bdd->prepare("INSERT INTO Capitain VALUES (:capUsername,:teamName)");
+        $requete0->bindParam(':capUsername',$this->username);
+        $requete0->bindParam(':teamName',$teamName);
+        $requete0->execute();
+
+        $requete1=$bdd->prepare("UPDATE Guests SET Team=:teamName WHERE username=:playerUsername");
+        $requete1->bindParam(':teamName',$teamName);
+        $requete1->bindParam(':playerUsername',$playerUsername);
+        $requete1->execute();
+
+        $requete2=$bdd->prepare("UPDATE Guests SET Team=:teamName WHERE username=:thisUsername");
+        $requete2->bindParam(':teamName',$teamName);
+        $requete2->bindParam(':thisUsername',$this->username);
+        $requete2->execute();
+
+        return new Capitain($this->username, $this->getMail(), $this->getName(), $this->getFirstname(), $this->getBirthday(), $this->getPassword(), $teamName, array($playerUsername));
+    }
+
+    public function scearchName($teamName,$bdd)
+    {
+        $requete = $bdd->prepare("SELECT * FROM Team WHERE teamName=:teamName");
+        $requete->bindParam(':teamName', $teamName);
+        $requete->execute();
+        $isPresent = $requete->fetchAll();
+        if ($isPresent != null) {
+            return true;//renvoie true si il est dans la base de donné
+        } else {
+            return false;//renvoie false si il n'est pas dans la base de donné
+        }
+    }
 }
